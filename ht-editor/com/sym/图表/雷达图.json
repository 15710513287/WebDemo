{
  "modified": "Wed Mar 20 2019 17:03:00 GMT+0800 (中国标准时间)",
  "dataBindings": [
    {
      "attr": "title",
      "valueType": "String",
      "name": "雷达图标题"
    },
    {
      "attr": "legend",
      "valueType": "String",
      "defaultValue": "内容",
      "name": "数据名"
    },
    {
      "attr": "indicator",
      "valueType": "ObjectArray",
      "defaultValue": [
        {
          "text": "品牌",
          "max": 100
        },
        {
          "text": "内容",
          "max": 100
        },
        {
          "text": "可用性",
          "max": 100
        },
        {
          "text": "功能",
          "max": 100
        }
      ],
      "name": "雷达图指示器"
    },
    {
      "attr": "dataValue",
      "valueType": "NumberArray",
      "defaultValue": [
        60,
        73,
        85,
        40
      ],
      "name": "雷达图数据"
    },
    {
      "attr": "itemColor",
      "valueType": "Color",
      "defaultValue": "#32D3EB",
      "name": "区域颜色"
    },
    {
      "attr": "textColor",
      "valueType": "Color",
      "defaultValue": "rgb(247,247,247)",
      "name": "文字颜色"
    },
    {
      "attr": "isShowText",
      "valueType": "Boolean",
      "defaultValue": true,
      "name": "是否显示文字"
    },
    {
      "attr": "titleColor",
      "valueType": "Color",
      "defaultValue": "#32D3EB",
      "name": "标题颜色"
    },
    {
      "attr": "contentColor",
      "valueType": "Color",
      "defaultValue": "rgb(61,61,61)",
      "name": "内容颜色"
    },
    {
      "attr": "fontAlign",
      "valueType": "Align",
      "defaultValue": "left",
      "name": "文字位置"
    }
  ],
  "snapshotURL": "symbols/basic/snapshot_chart.json",
  "renderHTML": "__ht__function(data, gv, cache) {var option = {\r\n    title: {\r\n        text: '标题'\r\n    },\r\n    tooltip: {\r\n        trigger: 'axis'\r\n    },\r\n    grid: {\r\n        left: '5%',\r\n        right: '5%',\r\n        bottom: 0,\r\n        top: '5%',\r\n        containLabel: true\r\n    },\r\n    radar: [\r\n        {\r\n            indicator: [\r\n\r\n            ],\r\n            center: ['50%','50%'],\r\n            radius: 80\r\n        }\r\n    ],\r\n    series: [\r\n        {\r\n            type: 'radar',\r\n             tooltip: {\r\n                trigger: 'item'\r\n            },\r\n            itemStyle: {normal: {areaStyle: {type: 'default'}}},\r\n            data: [\r\n                {\r\n\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nif (!cache.htmlView) {\r\n    cache.htmlView = document.createElement('div');\r\n    cache.htmlView.style.position = 'absolute';\r\n    if(data.a('isShowText')){\r\n        cache.htmlViewChart = document.createElement('div');\r\n        cache.htmlViewChart.style.width = '70%';\r\n        cache.htmlViewChart.style.height = '100%';\r\n        cache.htmlViewChart.style.float = 'left';\r\n\r\n        cache.htmlViewLabel = document.createElement('div');\r\n        cache.htmlViewLabel.style.width = '30%';\r\n        cache.htmlViewLabel.style.height = '100%';\r\n        cache.htmlViewLabel.style.float = 'left';\r\n\r\n        cache.htmlChart = echarts.init(cache.htmlViewChart);\r\n        var titleArr = data.a('indicator');\r\n        var dataArr = data.a('dataValue');\r\n        for(var i = 0; i < titleArr.length; i++){\r\n            var p = document.createElement('p');\r\n            p.style.textAlign = data.a('fontAlign');\r\n            var lab = document.createElement('span');\r\n            lab.style.color = data.a('titleColor');\r\n            lab.textContent = titleArr[i].text + '：';\r\n            var span = document.createElement('span');\r\n            span.textContent = dataArr[i]\r\n            span.style.color = data.a('contentColor');\r\n            p.appendChild(lab);\r\n            p.appendChild(span);\r\n            cache.htmlViewLabel.appendChild(p);\r\n        }\r\n        \r\n\r\n        cache.htmlView.appendChild(cache.htmlViewLabel);\r\n        cache.htmlView.appendChild(cache.htmlViewChart);\r\n    }else{\r\n        cache.htmlChart = echarts.init(cache.htmlView);\r\n    }\r\n    \r\n    \r\n    // layoutHTML will be called when the data needs to be drawing\r\n    cache.htmlView.layoutHTML = function() {\r\n        gv.layoutHTML(data, cache.htmlView, false);\r\n        cache.htmlChart.resize();\r\n    };\r\n}\r\nif(data.a('isShowText')){\r\n    $(cache.htmlViewLabel).empty();\r\n    var titleArr = data.a('indicator');\r\n    var dataArr = data.a('dataValue');\r\n    for(var i = 0; i < titleArr.length; i++){\r\n        var p = document.createElement('p');\r\n        p.style.textAlign = data.a('fontAlign');\r\n        var lab = document.createElement('span');\r\n        lab.style.color = data.a('titleColor');\r\n        lab.textContent = titleArr[i].text + '：';\r\n        var span = document.createElement('span');\r\n        span.textContent = dataArr[i]\r\n        span.style.color = data.a('contentColor');\r\n        p.appendChild(lab);\r\n        p.appendChild(span);\r\n        cache.htmlViewLabel.appendChild(p);\r\n    }\r\n}\r\n\r\n// update data\r\noption.title.text = [data.a('title')];\r\n//option.legend.data = [data.a('legend')];\r\noption.radar[0].indicator= data.a('indicator');\r\noption.series[0].data[0].value = data.a('dataValue');\r\noption.series[0].data[0].name = data.a('legend');\r\noption.color = [data.a('itemColor')];\r\ncache.htmlChart.setOption(option);\r\n\r\n// html for showing\r\nreturn cache.htmlView;}",
  "width": 250,
  "height": 250,
  "fitSize": true,
  "pixelPerfect": false,
  "attachStyle": "close",
  "comps": []
}