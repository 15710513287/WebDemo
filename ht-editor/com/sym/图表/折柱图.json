{
  "modified": "Wed Mar 20 2019 16:17:11 GMT+0800 (中国标准时间)",
  "dataBindings": [
    {
      "attr": "itemColor",
      "valueType": "ColorArray",
      "defaultValue": [
        "#c23531",
        "#2f4554",
        "#61a0a8",
        "#d48265",
        "#91c7ae",
        "#749f83",
        "#ca8622",
        "#bda29a",
        "#6e7074",
        "#546570",
        "#c4ccd3"
      ],
      "name": "图形颜色"
    },
    {
      "attr": "xAxis",
      "valueType": "StringArray",
      "defaultValue": [
        "1",
        "2",
        "3",
        "4",
        "5"
      ],
      "name": "x轴坐标"
    },
    {
      "attr": "barAxisName",
      "valueType": "String",
      "defaultValue": "水量",
      "name": "柱图轴名称"
    },
    {
      "attr": "barName",
      "valueType": "String",
      "defaultValue": "柱图",
      "name": "柱图名称"
    },
    {
      "attr": "barFormatter",
      "valueType": "String",
      "defaultValue": " ",
      "name": "柱图单位"
    },
    {
      "attr": "barInterval",
      "valueType": "Number",
      "defaultValue": 5,
      "name": "柱图间隔数"
    },
    {
      "attr": "barData",
      "valueType": "NumberArray",
      "defaultValue": [
        2,
        4.9,
        7,
        23.2,
        25.6
      ],
      "name": "柱图数据"
    },
    {
      "attr": "lineAxisName",
      "valueType": "String",
      "defaultValue": "温度",
      "name": "线图轴名称"
    },
    {
      "attr": "lineName",
      "valueType": "String",
      "defaultValue": "线图",
      "name": "线图名称"
    },
    {
      "attr": "lineFormatter",
      "valueType": "String",
      "defaultValue": " ",
      "name": "线图单位"
    },
    {
      "attr": "lineInterval",
      "valueType": "Number",
      "defaultValue": 5,
      "name": "线图间隔数"
    },
    {
      "attr": "lineData",
      "valueType": "NumberArray",
      "defaultValue": [
        2,
        23,
        16.5,
        12,
        6.2
      ],
      "name": "折线数据"
    },
    {
      "attr": "textColor",
      "valueType": "Color",
      "defaultValue": "rgb(247,247,247)",
      "name": "文字颜色"
    }
  ],
  "snapshotURL": "symbols/basic/snapshot_chart.json",
  "renderHTML": "__ht__function(data, gv, cache) {var option = {\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            type: 'cross',\r\n            crossStyle: {\r\n                color: '#999'\r\n            }\r\n        }\r\n    },\r\n    xAxis: [\r\n        {\r\n            type: 'category',\r\n            data: [],\r\n            axisPointer: {\r\n                type: 'shadow'\r\n            },\r\n            axisLabel:{\r\n    \t\t    interval: 0\r\n    \t    }\r\n        }\r\n    ],\r\n    yAxis: [\r\n        {\r\n            type: 'value',\r\n            name: '',\r\n            min: 0,\r\n            max: 250,\r\n            interval: 50,\r\n            axisLabel: {\r\n                formatter: '{value} '\r\n            }\r\n        },\r\n        {\r\n            type: 'value',\r\n            name: '',\r\n            min: 0,\r\n            max: 25,\r\n            interval: 5,\r\n            axisLabel: {\r\n                formatter: '{value} '\r\n            }\r\n        }\r\n    ],\r\n    series: [\r\n        {\r\n            name:'',\r\n            type:'bar',\r\n            data:[]\r\n        },\r\n        {\r\n            name:'',\r\n            type:'line',\r\n            yAxisIndex: 1,\r\n            data:[]\r\n        }\r\n    ]\r\n};\r\n\r\n\r\nif (!cache.htmlView) {\r\n    cache.htmlView = document.createElement('div');\r\n    cache.htmlView.style.position = 'absolute';\r\n    cache.htmlChart = echarts.init(cache.htmlView);\r\n\r\n    // layoutHTML will be called when the data needs to be drawing\r\n    cache.htmlView.layoutHTML = function() {\r\n        gv.layoutHTML(data, cache.htmlView, false);\r\n        cache.htmlChart.resize();\r\n    };\r\n}\r\n\r\n// update data\r\n\r\noption.color = data.a('itemColor');\r\noption.xAxis[0].data = data.a('xAxis');\r\noption.yAxis[0].name = data.a('barAxisName');\r\n/*\r\noption.yAxis[0].min = data.a('barMin');\r\noption.yAxis[0].max = data.a('barMax');\r\noption.yAxis[0].interval = data.a('barInterval');\r\n*/\r\n\r\noption.yAxis[0].axisLabel.formatter = '{value} '+data.a('barFormatter')+'';\r\noption.series[0].name = data.a('barName');\r\noption.series[0].data = data.a('barData');\r\n\r\nvar barArr = data.a('barData');\r\nvar minData = barArr[0];\r\nvar maxData = barArr[0];\r\n\r\nfor(var i = 1; i < barArr.length; i++){\r\n    var cur = barArr[i];\r\n    cur > maxData ? maxData = cur : null\r\n    cur < minData ? minData = cur : null\r\n}\r\nvar barInt = Math.ceil((maxData - minData) / data.a('barInterval'));\r\nminData - barInt < 0 ? minData = 0 : minData = minData - barInt;\r\nbarInt = Math.ceil((maxData - minData) / data.a('barInterval'));\r\nmaxData = barInt * data.a('barInterval');\r\n\r\noption.yAxis[0].min = minData;\r\noption.yAxis[0].max = maxData;\r\noption.yAxis[0].interval = barInt;\r\noption.yAxis[1].name = data.a('lineAxisName');\r\n\r\nvar lineArr = data.a('lineData');\r\nvar min = lineArr[0];\r\nvar max = lineArr[0];\r\n\r\nfor(var i = 1; i < lineArr.length; i++){\r\n    var cur = lineArr[i];\r\n    cur > max ? max = cur : null\r\n    cur < min ? min = cur : null\r\n}\r\nvar lineInt = Math.ceil((max - min) / data.a('lineInterval'))\r\nmin - lineInt < 0 ? min = 0 : min = min - lineInt;\r\nlineInt = Math.ceil((max - min) / data.a('lineInterval'))\r\nmax = lineInt * data.a('lineInterval');\r\n\r\noption.yAxis[1].min = min;\r\noption.yAxis[1].max = max;\r\noption.yAxis[1].interval = lineInt;\r\n\r\noption.yAxis[1].axisLabel.formatter = '{value} '+data.a('lineFormatter')+'';\r\noption.series[1].name = data.a('lineName');\r\noption.series[1].data = data.a('lineData');\r\noption.textStyle = { color: data.a('textColor') };\r\ncache.htmlChart.setOption(option);\r\n\r\n// html for showing\r\nreturn cache.htmlView;}",
  "width": 440,
  "height": 220,
  "fitSize": true,
  "pixelPerfect": false,
  "attachStyle": "close",
  "comps": []
}